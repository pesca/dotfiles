#!/usr/bin/env bash

usage="usage:
  dotfiles --help
  dotfiles <command> [--help] [<args>]

commands:
  backup <dir>      backups current dotfiles to dir
  install [--copy]  installs by linking or copying dotfiles
  remove <dotfile>  remove dotfile"

die () {
    echo "$1"
    exit 0
}

err () {
    echo "$1" >&2
    exit 1
}

backup () {
    shift
    [[ "$1" != "--help" ]] || die "usage: dotfiles backup <dir>"

    dir=$1

    if [[ ! -d $dir ]]; then
        echo "Creating backup directory..."
        mkdir "$dir"
    fi

    # backup corresponding dotfiles
    for dotfile in dot.*; do
        path="$HOME/$(echo $dotfile | cut -c4-)"
        if [[ -e $path ]]; then
            echo "Backing up $(basename $path)..."
            cp $path $dir/$dotfile
        fi
    done
}

install () {
    shift
    [[ "$1" != "--help" ]] || die "usage: dotfiles install [--copy]"

    verb="Linking"
    run="ln -s"

    if [[ $# = 1 ]]; then
        if [[ $1 = "--copy" ]]; then
            verb="Coppying"
            run="cp"
        else
            err "usage: dotfiles install [--copy]"
            exit -1
        fi
    fi

    for dotfile in dot.*; do
        path="$HOME/$(echo $dotfile | cut -c4-)"
        if [[ -f $path || -h $path ]]; then
            echo "Removing $(basename $path)..."
            rm $path
        fi
    done

    for dotfile in dot.*; do
        path="$HOME/$(echo $dotfile | cut -c4-)"
        echo "$verb $(basename $path)..."
        $run $(pwd)/$dotfile $path
    done
}

remove () {
    shift
    [[ "$1" != "--help" ]] || die "usage: dotfiles remove <dotfile>"

    dotfile=$1
    path="$HOME/$(echo $dotfile | cut -c4-)"

    rm "$dotfile"
    rm "$path"
}

main () {
    [[ "$0" = "./dotfiles" ]] || err "error: install from dotfiles dir."

    if   [[ "$1" = "--help"  ]]; then
        die "$usage"
    elif [[ "$1" = "backup"  ]]; then
        backup "$@"
    elif [[ "$1" = "install" ]]; then
        install "$@"
    elif [[ "$1" = "remove"  ]]; then
        remove "$@"
    else
        err "$usage"
    fi
}

main "$@"
